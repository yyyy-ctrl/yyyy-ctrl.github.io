<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的第一篇博客文章</title>
      <link href="/2024/09/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
      <url>/2024/09/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h1><h2 id="会话：一次会话中包含多次请求和响应。-一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止-功能：在一次会话的范围内的多次请求间，共享数据-方式：-1-客户端会话技术：Cookie-2-服务器端会话技术：Session"><a href="#会话：一次会话中包含多次请求和响应。-一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止-功能：在一次会话的范围内的多次请求间，共享数据-方式：-1-客户端会话技术：Cookie-2-服务器端会话技术：Session" class="headerlink" title="会话：一次会话中包含多次请求和响应。 一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止 功能：在一次会话的范围内的多次请求间，共享数据 方式： 1.客户端会话技术：Cookie 2.服务器端会话技术：Session"></a>会话：一次会话中包含多次请求和响应。<br> 一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止<br> 功能：在一次会话的范围内的多次请求间，共享数据<br> 方式：<br> 1.客户端会话技术：Cookie<br> 2.服务器端会话技术：Session</h2><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><h2 id="1-概念：客户端会话技术，将数据保存到客户端-2-快速入门：-使用步骤：-1-创建Cookie对象，绑定数据-new-Cookie-String-name-String-value-2-发送Cookie对象-response-addCookie-Cookie-cookie-3-获取Cookie，拿到数据-Cookie-request-getCookies"><a href="#1-概念：客户端会话技术，将数据保存到客户端-2-快速入门：-使用步骤：-1-创建Cookie对象，绑定数据-new-Cookie-String-name-String-value-2-发送Cookie对象-response-addCookie-Cookie-cookie-3-获取Cookie，拿到数据-Cookie-request-getCookies" class="headerlink" title="1.概念：客户端会话技术，将数据保存到客户端 2.快速入门：     使用步骤：         1.创建Cookie对象，绑定数据             new Cookie(String name, String value)        2.发送Cookie对象             response.addCookie(Cookie cookie)        3.获取Cookie，拿到数据            Cookie[]  request.getCookies()                        "></a>1.概念：客户端会话技术，将数据保存到客户端<br> 2.快速入门：<br>     使用步骤：<br>         1.创建Cookie对象，绑定数据<br>             new Cookie(String name, String value)<br>        2.发送Cookie对象<br>             response.addCookie(Cookie cookie)<br>        3.获取Cookie，拿到数据<br>            Cookie[]  request.getCookies()                        </h2><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><h2 id="1-概念：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession-2-快速入门：-获取HttpSession对象：-HttpSession-session-request-getSession-使用HttpSession对象：-Object-getAttribute-String-name-void-setAttribute-String-name-Object-value-void-removeAttribute-String-name"><a href="#1-概念：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession-2-快速入门：-获取HttpSession对象：-HttpSession-session-request-getSession-使用HttpSession对象：-Object-getAttribute-String-name-void-setAttribute-String-name-Object-value-void-removeAttribute-String-name" class="headerlink" title="1.概念：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession 2.快速入门：     获取HttpSession对象：         HttpSession session &#x3D; request.getSession();     使用HttpSession对象：        Object getAttribute(String name)        void setAttribute(String name, Object value)        void removeAttribute(String name)        "></a>1.概念：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession<br> 2.快速入门：<br>     获取HttpSession对象：<br>         HttpSession session &#x3D; request.getSession();<br>     使用HttpSession对象：<br>        Object getAttribute(String name)<br>        void setAttribute(String name, Object value)<br>        void removeAttribute(String name)        </h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="http://www.baidu.com/">www.baidu.com</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/09/05/hello-world/"/>
      <url>/2024/09/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
